cmake_minimum_required(VERSION 3.11)
project(LPCNet LANGUAGES C CXX)

if(NOT WIN32)
  message(FATAL_ERROR Only
                      tested
                      on
                      windows)
endif()

#set(MODEL_COMMIT 90ea887)
set(MODEL_COMMIT b58f477)
set(MODEL_URL https://media.xiph.org/lpcnet/data/lpcnet_data-${MODEL_COMMIT}.tar.gz)
set(MODEL_SOURCE_DIR "${CMAKE_CURRENT_BINARY_DIR}/models/src")

include(FetchContent)
fetchcontent_declare(lpcnet_data
                     URL
                     ${MODEL_URL}
                     SOURCE_DIR
                     "${CMAKE_CURRENT_BINARY_DIR}/models")

FetchContent_Declare(benchmark
                     GIT_REPOSITORY https://github.com/google/benchmark.git
                     GIT_PROGRESS TRUE
                     USES_TERMINAL_DOWNLOAD
                     TRUE)

FetchContent_GetProperties(lpcnet_data benchmark)
if(NOT lpcnet_data_POPULATED)
  fetchcontent_populate(lpcnet_data)
endif()

if(NOT benchmark_POPULATED)
  FetchContent_Populate(benchmark)
  set(BENCHMARK_ENABLE_GTEST_TESTS OFF CACHE BOOL "" FORCE)
  set(BENCHMARK_ENABLE_TESTING OFF CACHE BOOL "" FORCE)
  set(BENCHMARK_ENABLE_INSTALL OFF CACHE BOOL "" FORCE)
  add_subdirectory(${benchmark_SOURCE_DIR} EXCLUDE_FROM_ALL)
endif()

add_library(lpcnet_object
            OBJECT
            src/celt_lpc.c
            src/common.c
            src/freq.c
            src/kiss_fft.c
            src/lpcnet.c
            src/lpcnet_dec.c
            src/lpcnet_enc.c
            src/nnet.c
            src/pitch.c
            ${MODEL_SOURCE_DIR}/nnet_data.c
            ${MODEL_SOURCE_DIR}/ceps_codebooks.c)

target_include_directories(lpcnet_object PUBLIC include src ${MODEL_SOURCE_DIR})

if(MSVC)
  add_definitions(/wd4244)
  add_definitions(/wd4305)
  add_definitions(/wd4267)
  add_definitions(/wd4700)
  add_definitions(-D_CRT_SECURE_NO_WARNINGS)
  #add_definitions(-D__AVX__)
  #add_definitions(-D__AVX2__)
  #add_definitions(/arch:AVX2)
  add_definitions(/fp:fast)
  add_definitions(-DNEON2SSE)
  add_definitions(-DUSE_SSE4)
  add_definitions(/GS-)
  add_definitions(-DUSE_ALLOCA)
else()
  add_definitions(-DVAR_ARRAYS)
endif()

if(BUILD_TESTING)
  enable_testing()
  add_executable(test_vec src/test_vec.c)
  target_link_libraries(test_vec lpcnet_object)
  add_test(test_vec test_vec)

  add_executable(test_lpcnet src/test_lpcnet.c)
  target_link_libraries(test_lpcnet lpcnet_object)
endif()

add_executable(dump_data src/dump_data.c)
target_link_libraries(dump_data lpcnet_object)

add_executable(ceps_vq_train src/ceps_vq_train)
target_link_libraries(ceps_vq_train lpcnet_object)

add_executable(lpcnet_demo src/lpcnet_demo.c)
target_link_libraries(lpcnet_demo lpcnet_object)

add_executable(lpcnet_benchmark 
               src/test_data_1_channel_16_khz_pcm.h
               src/test_data_1_channel_16_khz_pcm.cpp
               src/lpcnet_benchmark.cpp)
target_link_libraries(lpcnet_benchmark PRIVATE benchmark lpcnet_object)
add_test(lpcnet_benchmark lpcnet_benchmark)
